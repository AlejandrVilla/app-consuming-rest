pipeline{
	agent any
	stages{
		stage("version"){
			steps{
				echo "version..."
				sh "java -version"
				// sh "spring --version"
			}
		}
		stage("build"){
			steps{
				echo "building..."
				sh "cd ./quoter"
				sh "mvn clean install"
			}
		}
		stage("deploy"){
			steps{
				echo "deploying..."
				sh "cd ./quoter"
				sh "mvn spring-boot:run"
				// sh "./quoter/mvnw spring-boot:run"
			}
		}
	}
}
// pipeline {
// 	agent none

// 	triggers {
// 		pollSCM 'H/10 * * * *'
// 	}

// 	options {
// 		disableConcurrentBuilds()
// 		buildDiscarder(logRotator(numToKeepStr: '14'))
// 	}

// 	stages {
// 		stage("build-and-deploy") {
// 			agent {
// 				docker {
// 					image 'springci/slackboot:latest'
// 					args '-v $HOME/.m2:/tmp/jenkins-home/.m2'
// 				}
// 			}
// 			options { timeout(time: 30, unit: 'MINUTES') }

// 			environment {
//                 PWS = credentials('pcfone-builds_at_springframework.org')
//             }

// 			steps {
// 	            sh 'MAVEN_OPTS="-Duser.name=jenkins -Duser.home=/tmp/jenkins-home" ./mvnw clean package'
// 	            sh './deploy'
// 			}
// 		}
// 	}

// 	post {
// 		changed {
// 			script {
// 				slackSend(
// 						color: (currentBuild.currentResult == 'SUCCESS') ? 'good' : 'danger',
// 						channel: '#sagan-content',
// 						message: "${currentBuild.fullDisplayName} - `${currentBuild.currentResult}`\n${env.BUILD_URL}")
// 				emailext(
// 						subject: "[${currentBuild.fullDisplayName}] ${currentBuild.currentResult}",
// 						mimeType: 'text/html',
// 						recipientProviders: [[$class: 'CulpritsRecipientProvider'], [$class: 'RequesterRecipientProvider']],
// 						body: "<a href=\"${env.BUILD_URL}\">${currentBuild.fullDisplayName} is reported as ${currentBuild.currentResult}</a>")
// 			}
// 		}
// 	}
// }
